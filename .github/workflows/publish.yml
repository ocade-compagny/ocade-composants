 name: Lint, test & publish
 on:
   push:
   pull_request:
     types:
       - opened
       - edited
     branches:
       - master
 jobs:
   publish:
     runs-on: ubuntu-latest
     steps:
       - if: github.ref_name == 'master'
         uses: actions/checkout@v3
         with:
           persist-credentials: false
           fetch-depth: 0
       - if: github.ref_name != 'master'
         uses: actions/checkout@v3
         with:
           persist-credentials: false
           fetch-depth: 0
           ref: ${{ github.event.pull_request.head.sha }}
       - uses: actions/setup-node@v2
         with:
           node-version: '16.x'
           registry-url: 'https://npm.pkg.github.com'
       - if: github.ref_name != 'master'
         run: git checkout ${{ github.head_ref }}
       - name: Install packages
         run: npm ci
       - uses: actions/upload-artifact@v3
       - name: Build
         run: npm run build
       - name: Git config
         run: |
           git config --local user.email "github-actions[bot]@users.noreply.github.com"
           git config --local user.name "github-actions[bot]"
       - if: github.ref_name == 'master'
         name: increment patch version
         run: npm version --no-git-tag-version patch
       - if: github.ref_name != 'master'
         name: increment prerelease version
         run: npm version --no-git-tag-version prerelease --preid=${{ github.ref_name }}
       - name: Commit new package.json version
         run: |
           git commit package.json -m "[bot] Updated library version"
       - name: Publish to package registry
         run: npm publish
         env:
           NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       - name: Push changes
         uses: ad-m/github-push-action@master
         with:
           github_token: ${{ secrets.GITHUB_TOKEN }}
           branch: ${{ github.ref_name }}
       - run: echo "new_version=$(node -e 'console.log(require(`./package.json`).version.replace(/\./g,`-`));')" >> $GITHUB_ENV
       - if: github.ref_name == 'master'
         name: Publish release
         uses: "marvinpinto/action-automatic-releases@latest"
         with:
           repo_token: "${{ secrets.GITHUB_TOKEN }}"
           automatic_release_tag: "${{ env.new_version }}"
           prerelease: false
           title: "${{ env.new_version }}"
       - if: github.ref_name != 'master'
         name: Publish release
         uses: "marvinpinto/action-automatic-releases@latest"
         with:
           repo_token: "${{ secrets.GITHUB_TOKEN }}"
           automatic_release_tag: "${{ env.new_version }}"
           prerelease: true
           title: "${{ env.new_version }}"